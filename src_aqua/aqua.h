#ifndef AQUA_H
#define AQUA_H

#include "global_types.h"
#include "dram.h"

typedef struct RQA RQA;

typedef struct PtrT_Entry PtrT_Entry;
typedef struct PtrT PtrT;

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////


struct RQA{
  uns64		num_rows;  // number of rows in the rqa
  Addr		*entries;  // pointer to rqa entry data
  uns64		head_ptr;  // pointer to available row in rqa for entry
  uns64		tail_ptr;
  uns64		reset;
  uns64		prev_head;
  uns64		next_free_qr;
  uns64		threshold;

  uns64		s_num_accesses;
  uns64		s_num_migrations;
  uns64		s_num_drains;
};

struct PtrT_Entry {
  Flag			valid;
  Addr			addr;
};

struct PtrT {
  uns64			num_rows;
  PtrT_Entry	*entries;

};
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

RQA *rqa_new(uns num_rows, uns64 threshold);
PtrT *ptrtables_new(uns64 entries);

void rqa_reset(RQA* rqa);
uns64 rqa_access(RQA* rqa, uns64 in_cycle);
uns64 rqa_migrate(RQA* rqa, Addr addr, PtrT* fpt, PtrT* rpt);

Addr rpt_access(PtrT* pt, Addr rowAddr);

void rqa_print_stats(RQA* rqa);

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // AQUA_H
